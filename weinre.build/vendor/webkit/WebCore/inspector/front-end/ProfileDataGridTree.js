/*
 * Copyright (C) 2009 280 North Inc. All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
WebInspector.ProfileDataGridNode=function(e,t,i,r){this.profileView=e,this.profileNode=t,WebInspector.DataGridNode.call(this,null,r),this.addEventListener("populate",this._populate,this),this.tree=i,this.childrenByCallUID={},this.lastComparator=null,this.callUID=t.callUID,this.selfTime=t.selfTime,this.totalTime=t.totalTime,this.functionName=t.functionName,this.numberOfCalls=t.numberOfCalls,this.url=t.url},WebInspector.ProfileDataGridNode.prototype={get data(){function e(e){return Number.secondsToString(e/1e3,!Preferences.samplingCPUProfiler)}var t={};return t.function=this.functionName,t.calls=this.numberOfCalls,this.profileView.showSelfTimeAsPercent?t.self=WebInspector.UIString("%.2f%%",this.selfPercent):t.self=e(this.selfTime),this.profileView.showTotalTimeAsPercent?t.total=WebInspector.UIString("%.2f%%",this.totalPercent):t.total=e(this.totalTime),this.profileView.showAverageTimeAsPercent?t.average=WebInspector.UIString("%.2f%%",this.averagePercent):t.average=e(this.averageTime),t},createCell:function(e){var t=WebInspector.DataGridNode.prototype.createCell.call(this,e);if("self"===e&&this._searchMatchedSelfColumn?t.addStyleClass("highlight"):"total"===e&&this._searchMatchedTotalColumn?t.addStyleClass("highlight"):"average"===e&&this._searchMatchedAverageColumn?t.addStyleClass("highlight"):"calls"===e&&this._searchMatchedCallsColumn&&t.addStyleClass("highlight"),"function"!==e)return t;if(this.profileNode._searchMatchedFunctionColumn&&t.addStyleClass("highlight"),this.profileNode.url){var i;0<this.profileNode.lineNumber&&(i=this.profileNode.lineNumber);var r=WebInspector.linkifyResourceAsNode(this.profileNode.url,"scripts",i,"profile-node-file");t.insertBefore(r,t.firstChild)}return t},select:function(e){WebInspector.DataGridNode.prototype.select.call(this,e),this.profileView._dataGridNodeSelected(this)},deselect:function(e){WebInspector.DataGridNode.prototype.deselect.call(this,e),this.profileView._dataGridNodeDeselected(this)},sort:function(/*Function*/e,/*Boolean*/t){for(var i=[[this]],r=0;r<i.length;++r)for(var l=i[r],s=l.length,a=0;a<s;++a){var h=l[a];
// If the grid node is collapsed, then don't sort children (save operation for later).
// If the grid node has the same sorting as previously, then there is no point in sorting it again.
if(t||h.expanded&&h.lastComparator!==e){h.lastComparator=e;var o=h.children,n=o.length;if(n){o.sort(e);for(var d=0;d<n;++d)o[d]._recalculateSiblings(d);i.push(o)}}else h.children.length&&(h.shouldRefreshChildren=!0)}},insertChild:function(/*ProfileDataGridNode*/e,t){WebInspector.DataGridNode.prototype.insertChild.call(this,e,t),this.childrenByCallUID[e.callUID]=e},removeChild:function(/*ProfileDataGridNode*/e){WebInspector.DataGridNode.prototype.removeChild.call(this,e),delete this.childrenByCallUID[e.callUID]},removeChildren:function(/*ProfileDataGridNode*/e){WebInspector.DataGridNode.prototype.removeChildren.call(this),this.childrenByCallUID={}},findChild:function(/*Node*/e){return e?this.childrenByCallUID[e.callUID]:null},get averageTime(){return this.selfTime/Math.max(1,this.numberOfCalls)},get averagePercent(){return this.averageTime/this.tree.totalTime*100},get selfPercent(){return this.selfTime/this.tree.totalTime*100},get totalPercent(){return this.totalTime/this.tree.totalTime*100},get _parent(){return this.parent!==this.dataGrid?this.parent:this.tree},_populate:function(e){if(this._sharedPopulate(),this._parent){var t=this._parent.lastComparator;t&&this.sort(t,!0)}this.removeEventListener&&this.removeEventListener("populate",this._populate,this)},
// When focusing and collapsing we modify lots of nodes in the tree.
// This allows us to restore them all to their original state when we revert.
_save:function(){this._savedChildren||(this._savedSelfTime=this.selfTime,this._savedTotalTime=this.totalTime,this._savedNumberOfCalls=this.numberOfCalls,this._savedChildren=this.children.slice())},
// When focusing and collapsing we modify lots of nodes in the tree.
// This allows us to restore them all to their original state when we revert.
_restore:function(){if(this._savedChildren){this.selfTime=this._savedSelfTime,this.totalTime=this._savedTotalTime,this.numberOfCalls=this._savedNumberOfCalls,this.removeChildren();for(var e=this._savedChildren,t=e.length,i=0;i<t;++i)e[i]._restore(),this.appendChild(e[i])}},_merge:function(e,t){this.selfTime+=e.selfTime,t||(this.totalTime+=e.totalTime,this.numberOfCalls+=e.numberOfCalls);var i=this.children.slice();this.removeChildren();for(var r=i.length,l=0;l<r;++l)t&&i[l]===e||this.appendChild(i[l]);r=(i=e.children.slice()).length;for(l=0;l<r;++l){var s=i[l],a=this.childrenByCallUID[s.callUID];a?a._merge(s,!1):this.appendChild(s)}}},WebInspector.ProfileDataGridNode.prototype.__proto__=WebInspector.DataGridNode.prototype,WebInspector.ProfileDataGridTree=function(e,t){(this.tree=this).children=[],this.profileView=e,this.totalTime=t.totalTime,this.lastComparator=null,this.childrenByCallUID={}},WebInspector.ProfileDataGridTree.prototype={get expanded(){return!0},appendChild:function(e){this.insertChild(e,this.children.length)},insertChild:function(e,t){this.children.splice(t,0,e),this.childrenByCallUID[e.callUID]=e},removeChildren:function(){this.children=[],this.childrenByCallUID={}},findChild:WebInspector.ProfileDataGridNode.prototype.findChild,sort:WebInspector.ProfileDataGridNode.prototype.sort,_save:function(){this._savedChildren||(this._savedTotalTime=this.totalTime,this._savedChildren=this.children.slice())},restore:function(){if(this._savedChildren){this.children=this._savedChildren,this.totalTime=this._savedTotalTime;for(var e=this.children,t=e.length,i=0;i<t;++i)e[i]._restore();this._savedChildren=null}}},WebInspector.ProfileDataGridTree.propertyComparators=[{},{}],WebInspector.ProfileDataGridTree.propertyComparator=function(/*String*/i,/*Boolean*/e){var t=this.propertyComparators[e?1:0][i];return t||(t=e?function(e,t){return e[i]<t[i]?-1:e[i]>t[i]?1:0}:function(e,t){return e[i]>t[i]?-1:e[i]<t[i]?1:0},this.propertyComparators[e?1:0][i]=t),t};