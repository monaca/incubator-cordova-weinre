/*
 * Copyright (C) 2010 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
WebInspector.HeapSnapshotView=function(e,t){WebInspector.View.call(this),this.element.addStyleClass("heap-snapshot-view"),this.parent=e,this.parent.addEventListener("profile added",this._updateBaseOptions,this),this.showCountAsPercent=!1,this.showSizeAsPercent=!1,this.showCountDeltaAsPercent=!1,this.showSizeDeltaAsPercent=!1,this.categories={code:new WebInspector.ResourceCategory("code",WebInspector.UIString("Code"),"rgb(255,121,0)"),data:new WebInspector.ResourceCategory("data",WebInspector.UIString("Objects"),"rgb(47,102,236)")};var s=document.createElement("div");s.id="heap-snapshot-summary-container",this.countsSummaryBar=new WebInspector.SummaryBar(this.categories),this.countsSummaryBar.element.className="heap-snapshot-summary",this.countsSummaryBar.calculator=new WebInspector.HeapSummaryCountCalculator;var r=document.createElement("div");r.className="heap-snapshot-summary-label",r.textContent=WebInspector.UIString("Count"),this.countsSummaryBar.element.appendChild(r),s.appendChild(this.countsSummaryBar.element),this.sizesSummaryBar=new WebInspector.SummaryBar(this.categories),this.sizesSummaryBar.element.className="heap-snapshot-summary",this.sizesSummaryBar.calculator=new WebInspector.HeapSummarySizeCalculator;var n=document.createElement("label");n.className="heap-snapshot-summary-label",n.textContent=WebInspector.UIString("Size"),this.sizesSummaryBar.element.appendChild(n),s.appendChild(this.sizesSummaryBar.element),this.element.appendChild(s);var a={cons:{title:WebInspector.UIString("Constructor"),disclosure:!0,sortable:!0},count:{title:WebInspector.UIString("Count"),width:"54px",sortable:!0},size:{title:WebInspector.UIString("Size"),width:"72px",sort:"descending",sortable:!0},
// \xb1 is a "plus-minus" sign.
countDelta:{title:WebInspector.UIString("± Count"),width:"72px",sortable:!0},sizeDelta:{title:WebInspector.UIString("± Size"),width:"72px",sortable:!0}};this.dataGrid=new WebInspector.DataGrid(a),this.dataGrid.addEventListener("sorting changed",this._sortData,this),this.dataGrid.element.addEventListener("mousedown",this._mouseDownInDataGrid.bind(this),!0),this.element.appendChild(this.dataGrid.element),this.profile=t,this.baseSelectElement=document.createElement("select"),this.baseSelectElement.className="status-bar-item",this.baseSelectElement.addEventListener("change",this._changeBase.bind(this),!1),this._updateBaseOptions(),this.percentButton=new WebInspector.StatusBarButton("","percent-time-status-bar-item status-bar-item"),this.percentButton.addEventListener("click",this._percentClicked.bind(this),!1),this._loadProfile(this.profile,function(e){for(var t,s=this._profiles(),r=0;r<s.length;++r)if(s[r].uid===e.uid){t=r;break}this.baseSelectElement.selectedIndex=0<t?t-1:t;this._resetDataGridList(function(){this.refresh(),this._updatePercentButton()}.bind(this))}.bind(this))},WebInspector.HeapSnapshotView.prototype={get statusBarItems(){return[this.baseSelectElement,this.percentButton.element]},get profile(){return this._profile},set profile(e){this._profile=e},show:function(e){WebInspector.View.prototype.show.call(this,e),this.dataGrid.updateWidths()},hide:function(){WebInspector.View.prototype.hide.call(this),this._currentSearchResultIndex=-1},resize:function(){this.dataGrid&&this.dataGrid.updateWidths()},refresh:function(){this.dataGrid.removeChildren();for(var e=this.snapshotDataGridList.children,t=e.length,s=0;s<t;++s)this.dataGrid.appendChild(e[s]);this._updateSummaryGraph()},refreshShowAsPercents:function(){this._updatePercentButton(),this.refreshVisibleData()},_deleteSearchMatchedFlags:function(e){delete e._searchMatchedConsColumn,delete e._searchMatchedCountColumn,delete e._searchMatchedSizeColumn,delete e._searchMatchedCountDeltaColumn,delete e._searchMatchedSizeDeltaColumn},searchCanceled:function(){if(this._searchResults)for(var e=0;e<this._searchResults.length;++e){var t=this._searchResults[e].profileNode;this._deleteSearchMatchedFlags(t),t.refresh()}delete this._searchFinishedCallback,this._currentSearchResultIndex=-1,this._searchResults=[]},performSearch:function(e,t){if(
// Call searchCanceled since it will reset everything we need before doing a new search.
this.searchCanceled(),(e=e.trim()).length){this._searchFinishedCallback=t;for(var s,r=WebInspector.HeapSnapshotView.SearchHelper,n=r.parseOperationAndNumber(e),a=n[0],i=n[1],o=r.percents.test(e),h=r.megaBytes.test(e),c=r.kiloBytes.test(e),l=r.bytes.test(e),p=h?1024*i*1024:c?1024*i:i,u=this.snapshotDataGridList.children[0],d=0,m={};u;)s=u,WebInspector.HeapSnapshotView.prototype._deleteSearchMatchedFlags(s),o?(s._searchMatchedCountColumn=a(s.countPercent,i),s._searchMatchedSizeColumn=a(s.sizePercent,i),s._searchMatchedCountDeltaColumn=a(s.countDeltaPercent,i),s._searchMatchedSizeDeltaColumn=a(s.sizeDeltaPercent,i)):h||c||l?(s._searchMatchedSizeColumn=a(s.size,p),s._searchMatchedSizeDeltaColumn=a(s.sizeDelta,p)):(s._searchMatchedCountColumn=a(s.count,i),s._searchMatchedCountDeltaColumn=a(s.countDelta,i)),s.constructorName.hasSubstring(e,!0)&&(s._searchMatchedConsColumn=!0),(s._searchMatchedConsColumn||s._searchMatchedCountColumn||s._searchMatchedSizeColumn||s._searchMatchedCountDeltaColumn||s._searchMatchedSizeDeltaColumn)&&(s.refresh(),1)&&this._searchResults.push({profileNode:u}),u=u.traverseNextNode(!1,null,2<=d,m),d+=m.depthChange;t(this,this._searchResults.length)}},
// FIXME: move these methods to a superclass, inherit both views from it.
jumpToFirstSearchResult:WebInspector.CPUProfileView.prototype.jumpToFirstSearchResult,jumpToLastSearchResult:WebInspector.CPUProfileView.prototype.jumpToLastSearchResult,jumpToNextSearchResult:WebInspector.CPUProfileView.prototype.jumpToNextSearchResult,jumpToPreviousSearchResult:WebInspector.CPUProfileView.prototype.jumpToPreviousSearchResult,showingFirstSearchResult:WebInspector.CPUProfileView.prototype.showingFirstSearchResult,showingLastSearchResult:WebInspector.CPUProfileView.prototype.showingLastSearchResult,_jumpToSearchResult:WebInspector.CPUProfileView.prototype._jumpToSearchResult,refreshVisibleData:function(){for(var e=this.dataGrid.children[0];e;)e.refresh(),e=e.traverseNextNode(!1,null,!0);this._updateSummaryGraph()},_changeBase:function(){this.baseSnapshot.uid!==this._profiles()[this.baseSelectElement.selectedIndex].uid&&this._resetDataGridList(function(){if(this.refresh(),!this.currentQuery||!this._searchFinishedCallback||!this._searchResults)return;
// The current search needs to be performed again. First negate out previous match
// count by calling the search finished callback with a negative number of matches.
// Then perform the search again with the same query and callback.
this._searchFinishedCallback(this,-this._searchResults.length),this.performSearch(this.currentQuery,this._searchFinishedCallback)}.bind(this))},_createSnapshotDataGridList:function(){return this._snapshotDataGridList&&delete this._snapshotDataGridList,this._snapshotDataGridList=new WebInspector.HeapSnapshotDataGridList(this,this.baseSnapshot.entries,this.profile.entries),this._snapshotDataGridList},_profiles:function(){return WebInspector.panels.profiles.getProfiles(WebInspector.HeapSnapshotProfileType.TypeId)},_loadProfile:function(e,t){WebInspector.panels.profiles.loadHeapSnapshot(e.uid,t)},processLoadedSnapshot:function(e,t){var s=WebInspector.HeapSnapshotView.prototype._convertSnapshot(t);e.children=s.children,e.entries=s.entries,e.lowlevels=s.lowlevels,WebInspector.HeapSnapshotView.prototype._prepareProfile(e)},_mouseDownInDataGrid:function(e){if(!(e.detail<2)){var t=e.target.enclosingNodeOrSelfWithNodeName("td");t&&(t.hasStyleClass("count-column")||t.hasStyleClass("size-column")||t.hasStyleClass("countDelta-column")||t.hasStyleClass("sizeDelta-column"))&&(t.hasStyleClass("count-column")?this.showCountAsPercent=!this.showCountAsPercent:t.hasStyleClass("size-column")?this.showSizeAsPercent=!this.showSizeAsPercent:t.hasStyleClass("countDelta-column")?this.showCountDeltaAsPercent=!this.showCountDeltaAsPercent:t.hasStyleClass("sizeDelta-column")&&(this.showSizeDeltaAsPercent=!this.showSizeDeltaAsPercent),this.refreshShowAsPercents(),e.preventDefault(),e.stopPropagation())}},get _isShowingAsPercent(){return this.showCountAsPercent&&this.showSizeAsPercent&&this.showCountDeltaAsPercent&&this.showSizeDeltaAsPercent},_percentClicked:function(e){var t=this._isShowingAsPercent;this.showCountAsPercent=!t,this.showSizeAsPercent=!t,this.showCountDeltaAsPercent=!t,this.showSizeDeltaAsPercent=!t,this.refreshShowAsPercents()},_convertSnapshot:function(e){for(var t={lowlevels:{},entries:{},children:{}},s=new WebInspector.HeapSnapshot(e).rootNode.edges,r=s;r.hasNext();r.next()){var n=r.edge.node;if(n.isHidden)t.lowlevels[n.name]={count:n.instancesCount,size:n.selfSize,type:n.name};else if(n.instancesCount)t.entries[n.name]={constructorName:n.name,count:n.instancesCount,size:n.selfSize};else{for(var a={constructorName:n.name},i=n.edges;i.hasNext();i.next()){var o=i.edge;a[o.nodeIndex]={constructorName:o.node.name,count:o.name}}t.children[s.edge.nodeIndex]=a}}return t},_prepareProfile:function(e){for(var t in e.entries)e.entries[t].retainers={};for(var s in e.clusters={},e.children){var r=e.children[s],n=r.constructorName+":"+s;for(var a in r)if("constructorName"!==a){var i=r[a],o=i.constructorName+":"+a;"Object"!==i.constructorName&&"Array"!==i.constructorName||(o in e.clusters||(e.clusters[o]={constructorName:o,retainers:{}}),h(e.clusters[o],i)),h(e.entries[i.constructorName],i)}}function h(e,t){r.constructorName in e.retainers||(e.retainers[r.constructorName]={constructorName:r.constructorName,count:0,clusters:{}});var s=e.retainers[r.constructorName];s.count+=t.count,"Object"!==r.constructorName&&"Array"!==r.constructorName||(s.clusters[n]=!0)}},_resetDataGridList:function(s){this._loadProfile(this._profiles()[this.baseSelectElement.selectedIndex],function(e){this.baseSnapshot=e;var t=WebInspector.HeapSnapshotDataGridList.propertyComparator("size",!1);this.snapshotDataGridList&&(t=this.snapshotDataGridList.lastComparator);this.snapshotDataGridList=this._createSnapshotDataGridList(),this.snapshotDataGridList.sort(t,!0),s()}.bind(this))},_sortData:function(){var e="ascending"===this.dataGrid.sortOrder,t=this.dataGrid.sortColumnIdentifier,s={cons:["constructorName",null],count:["count","constructorName"],size:["size","constructorName"],countDelta:[this.showCountDeltaAsPercent?"countDeltaPercent":"countDelta","constructorName"],sizeDelta:[this.showSizeDeltaAsPercent?"sizeDeltaPercent":"sizeDelta","constructorName"]}[t];this.snapshotDataGridList.sort(WebInspector.HeapSnapshotDataGridList.propertyComparator(s[0],s[1],e)),this.refresh()},_updateBaseOptions:function(){var e=this._profiles();
// We're assuming that snapshots can only be added.
if(this.baseSelectElement.length!==e.length)for(var t=this.baseSelectElement.length,s=e.length;t<s;++t){var r=document.createElement("option"),n=e[t].title;n.indexOf(UserInitiatedProfileName)||(n=WebInspector.UIString("Snapshot %d",n.substring(UserInitiatedProfileName.length+1))),r.label=WebInspector.UIString("Compared to %s",n),this.baseSelectElement.appendChild(r)}},_updatePercentButton:function(){this._isShowingAsPercent?(this.percentButton.title=WebInspector.UIString("Show absolute counts and sizes."),this.percentButton.toggled=!0):(this.percentButton.title=WebInspector.UIString("Show counts and sizes as percentages."),this.percentButton.toggled=!1)},_updateSummaryGraph:function(){this.countsSummaryBar.calculator.showAsPercent=this._isShowingAsPercent,this.countsSummaryBar.update(this.profile.lowlevels),this.sizesSummaryBar.calculator.showAsPercent=this._isShowingAsPercent,this.sizesSummaryBar.update(this.profile.lowlevels)}},WebInspector.HeapSnapshotView.prototype.__proto__=WebInspector.View.prototype,WebInspector.HeapSnapshotView.SearchHelper={
// In comparators, we assume that a value from a node is passed as the first parameter.
operations:{LESS:function(e,t){return null!==e&&e<t},LESS_OR_EQUAL:function(e,t){return null!==e&&e<=t},EQUAL:function(e,t){return null!==e&&e===t},GREATER_OR_EQUAL:function(e,t){return null!==e&&t<=e},GREATER:function(e,t){return null!==e&&t<e}},operationParsers:{LESS:/^<(\d+)/,LESS_OR_EQUAL:/^<=(\d+)/,GREATER_OR_EQUAL:/^>=(\d+)/,GREATER:/^>(\d+)/},parseOperationAndNumber:function(e){var t=WebInspector.HeapSnapshotView.SearchHelper.operations,s=WebInspector.HeapSnapshotView.SearchHelper.operationParsers;for(var r in s){var n=e.match(s[r]);if(null!==n)return[t[r],parseFloat(n[1])]}return[t.EQUAL,parseFloat(e)]},percents:/%$/,megaBytes:/MB$/i,kiloBytes:/KB$/i,bytes:/B$/i},WebInspector.HeapSummaryCalculator=function(e){this.total=1,this.lowLevelField=e},WebInspector.HeapSummaryCalculator.prototype={computeSummaryValues:function(e){var t={data:0,code:0};for(var s in this.total=0,e){var r=this._highFromLow(s);if(r){var n=e[s][this.lowLevelField];t[r]+=n,this.total+=n}}var a={categoryValues:t};return this.showAsPercent||(a.total=this.total),a},formatValue:function(e){return this.showAsPercent?WebInspector.UIString("%.2f%%",e/this.total*100):this._valueToString(e)},get showAsPercent(){return this._showAsPercent},set showAsPercent(e){this._showAsPercent=e}},WebInspector.HeapSummaryCountCalculator=function(){WebInspector.HeapSummaryCalculator.call(this,"count")},WebInspector.HeapSummaryCountCalculator.prototype={_highFromLow:function(e){return"CODE_TYPE"===e||"SHARED_FUNCTION_INFO_TYPE"===e||"SCRIPT_TYPE"===e?"code":"STRING_TYPE"===e||"HEAP_NUMBER_TYPE"===e||e.match(/^JS_/)?"data":null},_valueToString:function(e){return e.toString()}},WebInspector.HeapSummaryCountCalculator.prototype.__proto__=WebInspector.HeapSummaryCalculator.prototype,WebInspector.HeapSummarySizeCalculator=function(){WebInspector.HeapSummaryCalculator.call(this,"size")},WebInspector.HeapSummarySizeCalculator.prototype={_highFromLow:function(e){return"CODE_TYPE"===e||"SHARED_FUNCTION_INFO_TYPE"===e||"SCRIPT_TYPE"===e?"code":"STRING_TYPE"===e||"HEAP_NUMBER_TYPE"===e||e.match(/^JS_/)||e.match(/_ARRAY_TYPE$/)?"data":null},_valueToString:Number.bytesToString},WebInspector.HeapSummarySizeCalculator.prototype.__proto__=WebInspector.HeapSummaryCalculator.prototype,WebInspector.HeapSnapshotDataGridNodeWithRetainers=function(e){this.tree=e,WebInspector.DataGridNode.call(this,null,this._hasRetainers),this.addEventListener("populate",this._populate,this)},WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype={isEmptySet:function(e){for(var t in e)return!1;return!0},get _hasRetainers(){return!this.isEmptySet(this.retainers)},get _parent(){
// For top-level nodes, return owning tree as a parent, not data grid.
return this.parent!==this.dataGrid?this.parent:this.tree},_populate:function(e){if(this.produceDiff(this.baseRetainers,this.retainers,function(e,t){this.appendChild(new WebInspector.HeapSnapshotDataGridRetainerNode(this.snapshotView,e,t,this.tree))}.bind(this)),this._parent){var t=this._parent.lastComparator;t&&this.sort(t,!0)}this.removeEventListener("populate",this._populate,this)},produceDiff:function(e,t,s){for(var r in t)s(e[r],t[r]);for(r in e)r in t||s(e[r],null)},sort:function(e,t){if(t||this.lastComparator!==e){this.children.sort(e);for(var s=this.children.length,r=0;r<s;++r)this.children[r]._recalculateSiblings(r);for(var n=0;n<this.children.length;++n){var a=this.children[n];(t||a.expanded&&a.lastComparator!==e)&&a.sort(e,t)}this.lastComparator=e}},signForDelta:function(e){return 0===e?"":0<e?"+":"−"},showDeltaAsPercent:function(e){return e===Number.POSITIVE_INFINITY?WebInspector.UIString("new"):e===Number.NEGATIVE_INFINITY?WebInspector.UIString("deleted"):1e3<e?WebInspector.UIString("%s >1000%%",this.signForDelta(e)):WebInspector.UIString("%s%.2f%%",this.signForDelta(e),Math.abs(e))},getTotalCount:function(){if(!this._count)for(var e=this._count=0,t=this.children.length;e<t;++e)this._count+=this.children[e].count;return this._count},getTotalSize:function(){if(!this._size)for(var e=this._size=0,t=this.children.length;e<t;++e)this._size+=this.children[e].size;return this._size},get countPercent(){return this.count/this._parent.getTotalCount()*100},get sizePercent(){return this.size/this._parent.getTotalSize()*100},get countDeltaPercent(){return 0<this.baseCount?0<this.count?this.countDelta/this.baseCount*100:Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY},get sizeDeltaPercent(){return 0<this.baseSize?0<this.size?this.sizeDelta/this.baseSize*100:Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY},get data(){var e={};return e.cons=this.constructorName,this.snapshotView.showCountAsPercent?e.count=WebInspector.UIString("%.2f%%",this.countPercent):e.count=this.count,null!==this.size?this.snapshotView.showSizeAsPercent?e.size=WebInspector.UIString("%.2f%%",this.sizePercent):e.size=Number.bytesToString(this.size):e.size="",this.snapshotView.showCountDeltaAsPercent?e.countDelta=this.showDeltaAsPercent(this.countDeltaPercent):e.countDelta=WebInspector.UIString("%s%d",this.signForDelta(this.countDelta),Math.abs(this.countDelta)),null!==this.sizeDelta?this.snapshotView.showSizeDeltaAsPercent?e.sizeDelta=this.showDeltaAsPercent(this.sizeDeltaPercent):e.sizeDelta=WebInspector.UIString("%s%s",this.signForDelta(this.sizeDelta),Number.bytesToString(Math.abs(this.sizeDelta))):e.sizeDelta="",e},createCell:function(e){var t=WebInspector.DataGridNode.prototype.createCell.call(this,e);return("cons"===e&&this._searchMatchedConsColumn||"count"===e&&this._searchMatchedCountColumn||"size"===e&&this._searchMatchedSizeColumn||"countDelta"===e&&this._searchMatchedCountDeltaColumn||"sizeDelta"===e&&this._searchMatchedSizeDeltaColumn)&&t.addStyleClass("highlight"),t}},WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype.__proto__=WebInspector.DataGridNode.prototype,WebInspector.HeapSnapshotDataGridNode=function(e,t,s,r){this.snapshotView=e,s||(s={constructorName:t.constructorName,count:0,size:0,retainers:{}}),this.constructorName=s.constructorName,this.count=s.count,this.size=s.size,this.retainers=s.retainers,t||(t={count:0,size:0,retainers:{}}),this.baseCount=t.count,this.countDelta=this.count-this.baseCount,this.baseSize=t.size,this.sizeDelta=this.size-this.baseSize,this.baseRetainers=t.retainers,WebInspector.HeapSnapshotDataGridNodeWithRetainers.call(this,r)},WebInspector.HeapSnapshotDataGridNode.prototype.__proto__=WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype,WebInspector.HeapSnapshotDataGridList=function(e,t,s){(this.tree=this).snapshotView=e,this.children=[],this.lastComparator=null,this.populateChildren(t,s)},WebInspector.HeapSnapshotDataGridList.prototype={appendChild:function(e){this.insertChild(e,this.children.length)},insertChild:function(e,t){this.children.splice(t,0,e)},removeChildren:function(){this.children=[]},populateChildren:function(e,t){this.produceDiff(e,t,function(e,t){this.appendChild(new WebInspector.HeapSnapshotDataGridNode(this.snapshotView,e,t,this))}.bind(this))},produceDiff:WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype.produceDiff,sort:WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype.sort,getTotalCount:WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype.getTotalCount,getTotalSize:WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype.getTotalSize},WebInspector.HeapSnapshotDataGridList.propertyComparators=[{},{}],WebInspector.HeapSnapshotDataGridList.propertyComparator=function(a,i,o){var e=a+"#"+i,t=this.propertyComparators[o?1:0][e];return t||(t=function(e,t){var s=e[a],r=t[a],n=0;return null!==s&&null!==r&&(n=s<r?-1:r<s?1:0),0!==n||null===i?o?n:-n:(s=e[i])<(r=t[i])?-1:r<s?1:0},this.propertyComparators[o?1:0][e]=t),t},WebInspector.HeapSnapshotDataGridRetainerNode=function(e,t,s,r){this.snapshotView=e,s||(s={constructorName:t.constructorName,count:0,clusters:{}}),this.constructorName=s.constructorName,this.count=s.count,this.retainers=this._calculateRetainers(this.snapshotView.profile,s.clusters),t||(t={count:0,clusters:{}}),this.baseCount=t.count,this.countDelta=this.count-this.baseCount,this.baseRetainers=this._calculateRetainers(this.snapshotView.baseSnapshot,t.clusters),this.size=null,this.sizeDelta=null,WebInspector.HeapSnapshotDataGridNodeWithRetainers.call(this,r)},WebInspector.HeapSnapshotDataGridRetainerNode.prototype={get sizePercent(){return null},get sizeDeltaPercent(){return null},_calculateRetainers:function(e,t){var s={};if(this.isEmptySet(t)){if(this.constructorName in e.entries)return e.entries[this.constructorName].retainers}else
// In case when an entry is retained by clusters, we need to gather up the list
// of retainers by merging retainers of every cluster.
// E.g. having such a tree:
//   A
//     Object:1  10
//       X       3
//       Y       4
//     Object:2  5
//       X       6
//
// will result in a following retainers list: X 9, Y 4.
for(var r in t)if(r in e.clusters){var n=e.clusters[r].retainers;for(var a in n){var i=n[a];for(var o in a in s||(s[a]={constructorName:i.constructorName,count:0,clusters:{}}),s[a].count+=i.count,i.clusters)s[a].clusters[o]=!0}}return s}},WebInspector.HeapSnapshotDataGridRetainerNode.prototype.__proto__=WebInspector.HeapSnapshotDataGridNodeWithRetainers.prototype,WebInspector.HeapSnapshotProfileType=function(){WebInspector.ProfileType.call(this,WebInspector.HeapSnapshotProfileType.TypeId,WebInspector.UIString("HEAP SNAPSHOTS"))},WebInspector.HeapSnapshotProfileType.TypeId="HEAP",WebInspector.HeapSnapshotProfileType.prototype={get buttonTooltip(){return WebInspector.UIString("Take heap snapshot.")},get buttonStyle(){return"heap-snapshot-status-bar-item status-bar-item"},buttonClicked:function(){InspectorBackend.takeHeapSnapshot(!1)},get welcomeMessage(){return WebInspector.UIString("Get a heap snapshot by pressing the %s button on the status bar.")},createSidebarTreeElementForProfile:function(e){return new WebInspector.ProfileSidebarTreeElement(e,WebInspector.UIString("Snapshot %d"),"heap-snapshot-sidebar-tree-item")},createView:function(e){return new WebInspector.HeapSnapshotView(WebInspector.panels.profiles,e)}},WebInspector.HeapSnapshotProfileType.prototype.__proto__=WebInspector.ProfileType.prototype;